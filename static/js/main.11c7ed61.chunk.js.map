{"version":3,"sources":["Services/api.js","Components/Container/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Main","state","newRepo","repositories","handleInputChange","e","setState","target","value","handleSubmit","a","preventDefault","get","response","data","name","full_name","console","log","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","map","repository","key","to","encodeURIComponent","Component","Loading","Owner","header","IssueList","Repository","issues","match","repoName","decodeURIComponent","params","Promise","all","per_page","src","owner","avatar_url","alt","login","description","issue","String","id","user","href","html_url","title","labels","label","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11c7ed61.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com',\r\n});\r\n\r\nexport default api;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 700px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n  margin: 80px auto;\r\n\r\n  h1 {\r\n    font-size: 20px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import styled, { keyframes, css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 700px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n  margin: 80px auto;\r\n\r\n  h1 {\r\n    font-size: 20px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  input {\r\n    flex: 1;\r\n    border: 1px solid #eee;\r\n    padding: 10px 15px;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg)\r\n  }\r\n  to{\r\n    transform: rotate(360deg)\r\n\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button.attrs(props => ({\r\n  type: 'submit',\r\n  disabled: props.loading,\r\n}))`\r\n  background: #7159c1;\r\n  border: 0;\r\n  padding: 0 15px;\r\n  margin-left: 10px;\r\n  border-radius: 4px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &[disabled] {\r\n    cursor: not-allowed;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  ${props =>\r\n    props.loading &&\r\n    css`\r\n      svg {\r\n        animation: ${rotate} 2s linear infinite;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  margin-top: 30px;\r\n\r\n  li {\r\n    padding: 15px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    & + li {\r\n      border-top: 1px solid #eee;\r\n    }\r\n\r\n    a {\r\n      color: #7159c1;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport api from '../../Services/api';\r\n\r\n// eslint-disable-next-line import/no-named-as-default\r\nimport Container from '../../Components/Container';\r\nimport { Form, SubmitButton, List } from './styles';\r\n\r\nexport default class Main extends Component {\r\n  state = {\r\n    newRepo: '',\r\n    repositories: [],\r\n    loading: false,\r\n  };\r\n\r\n  // Carregar dados do localStorage\r\n  componentDidMount() {\r\n    const repositories = localStorage.getItem('repositories');\r\n\r\n    if (repositories) {\r\n      this.setState({\r\n        repositories: JSON.parse(repositories),\r\n      });\r\n    }\r\n  }\r\n\r\n  // Salvar dados do localStorage\r\n  componentDidUpdate(_, prevState) {\r\n    const { repositories } = this.state;\r\n\r\n    if (prevState.repositories !== repositories) {\r\n      localStorage.setItem('repositories', JSON.stringify(repositories));\r\n    }\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ newRepo: e.target.value });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const { newRepo, repositories } = this.state;\r\n    this.setState({ loading: true });\r\n\r\n    const response = await api.get(`/repos/ArturMassaro/${newRepo}`);\r\n\r\n    const data = {\r\n      name: response.data.full_name,\r\n    };\r\n\r\n    this.setState({\r\n      repositories: [...repositories, data],\r\n      newRepo: '',\r\n      loading: false,\r\n    });\r\n\r\n    console.log(response.data);\r\n  };\r\n\r\n  render() {\r\n    const { newRepo, loading, repositories } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <h1>\r\n          <FaGithubAlt />\r\n          Repositórios\r\n        </h1>\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Adicionar repositótio\"\r\n            value={newRepo}\r\n            onChange={this.handleInputChange}\r\n          />\r\n\r\n          <SubmitButton loading={loading}>\r\n            {loading ? (\r\n              <FaSpinner color=\"#fff\" size={14} />\r\n            ) : (\r\n              <FaPlus color=\"#fff\" size={14} />\r\n            )}\r\n          </SubmitButton>\r\n        </Form>\r\n\r\n        <List>\r\n          {repositories.map(repository => (\r\n            <li key={repository.name}>\r\n              <span>{repository.name}</span>\r\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\r\n                Detalhes\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </List>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Loading = styled.div`\r\n  color: #fff;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Owner = styled.header`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  a {\r\n    color: #7159c1;\r\n    font-size: 16px;\r\n    text-decoration: none;\r\n  }\r\n\r\n  img {\r\n    width: 120px;\r\n    border-radius: 50%;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 24px;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  p {\r\n    xmargin-top: 5px;\r\n    font-size: 14px;\r\n    color: #666;\r\n    line-height: 1.4;\r\n    text-align: center;\r\n    max-width: 400px;\r\n  }\r\n`;\r\n\r\nexport const IssueList = styled.ul`\r\n  padding-top: 30px;\r\n  margin-top: 30px;\r\n  border-top: 1px solid #eee;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: flex;\r\n    padding: 15px 10px;\r\n    border: 1px solid #eee;\r\n    border-radius: 4px;\r\n\r\n    & + li {\r\n      margin-top: 10px;\r\n    }\r\n\r\n    img {\r\n      width: 36px;\r\n      height: 36px;\r\n      border-radius: 50%;\r\n      border: 2px solid #eee;\r\n    }\r\n\r\n    div {\r\n      flex: 1;\r\n      margin-left: 15px;\r\n\r\n      strong {\r\n        font-size: 16px;\r\n\r\n        a {\r\n          text-decoration: none;\r\n          color: #333;\r\n\r\n          &:hover {\r\n            color: #7159c1;\r\n          }\r\n        }\r\n\r\n        span {\r\n          background: #eee;\r\n          color: #333;\r\n          border-radius: 2px;\r\n          font-size: 12px;\r\n          font-weight: 600;\r\n          height: 20px;\r\n          padding: 3px 4px;\r\n          margin-left: 10px;\r\n        }\r\n      }\r\n\r\n      p {\r\n        margin-top: 10px;\r\n        font-size: 12px;\r\n        color: #999;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { stringTypeAnnotation } from '@babel/types';\r\nimport api from '../../Services/api';\r\n\r\nimport { Loading, Owner, IssueList } from './styles';\r\nimport Container from '../../Components/Container';\r\n\r\nexport default class Repository extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      params: PropTypes.shape({\r\n        repository: PropTypes.string,\r\n      }),\r\n    }).isRequired,\r\n  };\r\n\r\n  state = {\r\n    repository: {},\r\n    issues: [],\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    const repoName = decodeURIComponent(match.params.repository);\r\n\r\n    const [repository, issues] = await Promise.all([\r\n      api.get(`/repos/${repoName}`),\r\n      api.get(`/repos/${repoName}/issues`, {\r\n        params: {\r\n          state: 'open',\r\n          per_page: 5,\r\n        },\r\n      }),\r\n    ]);\r\n\r\n    this.setState({\r\n      issues: issues.data,\r\n      repository: repository.data,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { repository, issues, loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <Loading>Carregando</Loading>;\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Owner>\r\n          <Link to=\"/\">Voltar aos repositorios</Link>\r\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\r\n          <h1>{repository.name}</h1>\r\n          <p>{repository.description}</p>\r\n        </Owner>\r\n\r\n        <IssueList>\r\n          {issues.map(issue => (\r\n            <li key={String(issue.id)}>\r\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\r\n              <div>\r\n                <strong>\r\n                  <a href={issue.html_url}>{issue.title}</a>\r\n                  {issue.labels.map(label => (\r\n                    <span key={String(label.id)}>{label.name}</span>\r\n                  ))}\r\n                </strong>\r\n                <p>{issue.user.login}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </IssueList>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\nimport Repository from './pages/Repository';\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/repository/:repository\" exact component={Repository} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body, #root {\r\n    min-height: 100%;\r\n  }\r\n\r\n  body{\r\n    background: #7159c1;\r\n    --webkit-font-smoothing: antialiased !important;\r\n  }\r\n\r\n  body, input, button {\r\n    color: #222;\r\n    font-size: 14px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}